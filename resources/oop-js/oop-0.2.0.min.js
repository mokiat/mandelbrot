/** Copyright 2014 momchil.me | http://www.apache.org/licenses/LICENSE-2.0 */

oop=window.oop||{};oop.createConstructorFunction=function(){return function(){};};oop.abstractMethod=function(){throw"Trying to call an abstract method.";};oop.namespace=function(name){var currentObject=window;var segments=name.split(".");for(var i=0;i<segments.length;++i){var segment=segments[i];currentObject[segment]=currentObject[segment]||{};currentObject=currentObject[segment];}};oop.baseClass=oop.createConstructorFunction();oop.class=function(parentClass,definition){if(definition===undefined){return oop.class(oop.baseClass,parentClass);}
var classFunction=definition.__create__;if(!classFunction){classFunction=oop.createConstructorFunction();}
$.extend(classFunction.prototype,parentClass.prototype);$.extend(classFunction.prototype,definition);classFunction.__create__=null;classFunction.prototype.__super__=function(){parentClass.apply(this,arguments);};return classFunction;};oop.doesImplement=function(candidate,interfaceDefinition){for(var methodName in interfaceDefinition){var field=candidate[methodName];if(field===undefined){return false;}
if(typeof(field)!=="function"){return false;}}
return true;};oop.interface=function(definition){var interfaceFunction=oop.createConstructorFunction();var stubbedDefiniton={};for(var methodName in definition){stubbedDefiniton[methodName]=oop.abstractMethod;}
$.extend(interfaceFunction,stubbedDefiniton);stubbedDefiniton={};for(var methodName in definition){stubbedDefiniton[methodName]=oop.abstractMethod;}
$.extend(interfaceFunction.prototype,stubbedDefiniton);interfaceFunction.isImplementedBy=function(candidate){return oop.doesImplement(candidate,definition);};return interfaceFunction;};